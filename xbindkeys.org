* ~/.xbindkeysrc.scm

*** note

    - xbindkeys version: 1.8.5
    - any functions that work in guile will work here.
    - To specify a key
      you can use
      xbindkeys --key
      or
      xbindkeys --multikey
      and put one of the two lines in this file.
    - A list of keys is in
      /usr/include/X11/keysym.h
      and in
      /usr/include/X11/keysymdef.h
      The XK_ is not needed.

*** troubleshooting

    If, for any reason
    a hotkey you already set in ~/.xbindkeysrc doesn't work
    open up a terminal and type the following:
    $ xbindkeys -n
    By pressing the non-working key
    you will be able to see any error xbindkeys encounter
    + e.g: mistyped command/keycode

*** modifier

    - List of modifier:
      - Release
        The release modifier is not a standard X modifier
        but you can use it if you want to catch release instead of press events
      - Control
      - Shift
      - Mod1 (Alt)
      - Mod2 (NumLock)
      - Mod3 (CapsLock)
      - Mod4
      - Mod5 (Scroll)

    - By defaults, xbindkeys does not pay attention to modifiers
      NumLock, CapsLock and ScrollLock.
      Uncomment the lines below if you want to use them.
      To dissable them, call the functions with #f

    #+begin_src scheme
    ;; (set-numlock! #t)
    ;; (set-scrolllock! #t)
    ;; (set-capslock! #t)
    #+end_src

*** scheme API reference

    #+begin_src scheme
    ;; shell command key:
    (xbindkey key "shell-command [args]")
    (xbindkey '(modifier* key) "shell-command [args]")

    ;; scheme function key:
    (xbindkey-function key <scheme-procedure>)
    (xbindkey-function '(modifier* key) <scheme-procedure>)

    ;; other functions:
    (remove-xbindkey key)
    (run-command "foo-bar-command [args]")
    (grab-all-keys)
    (ungrab-all-keys)
    (remove-all-keys)
    (debug)
    #+end_src

*** binding commands

    #+begin_src scheme
    (xbindkey '(control shift q) "xbindkeys_show")

    ;; set directly keycode (here control + f with my keyboard)
    (xbindkey '("m:0x4" "c:41") "xterm")

    ;; specify a mouse button
    (xbindkey '(control "b:2") "xterm")

    (xbindkey '(shift mod2 alt s) "xterm -geom 50x20+20+20")

    ;; set directly keycode (control+alt+mod2 + f with my keyboard)
    (xbindkey '(alt "m:4" mod2 "c:0x29") "xterm")

    ;; Control+Shift+a  release event starts rxvt
    (xbindkey '(release control shift a) "urxvt")

    ;; Control + mouse button 2 release event starts rxvt
    (xbindkey '(releace control "b:2") "rxvt")


    (xbindkey-function '(control a)
                      (lambda ()
                        (display "Hello from Scheme!")
                        (newline)))

    (xbindkey-function '(shift p)
                      (lambda ()
                        (run-command "xterm")))
    #+end_src

*** >< test

    #+begin_src scheme
    ;; Double click test
    (xbindkey-function '(control w)
                       (let ((count 0))
                         (lambda ()
                           (set! count (+ count 1))
                           (if (> count 1)
                               (begin
                                (set! count 0)
                                (run-command "xterm"))))))

    ;; Time double click test:
    ;;  - short double click -> run an xterm
    ;;  - long  double click -> run an rxvt
    (xbindkey-function '(shift w)
                       (let ((time (current-time))
                             (count 0))
                         (lambda ()
                           (set! count (+ count 1))
                           (if (> count 1)
                               (begin
                                (if (< (- (current-time) time) 1)
                                    (run-command "xterm")
                                    (run-command "rxvt"))
                                (set! count 0)))
                           (set! time (current-time)))))


    ;; Chording keys test: Start differents program if only one key is
    ;; pressed or another if two keys are pressed.
    ;; If key1 is pressed start cmd-k1
    ;; If key2 is pressed start cmd-k2
    ;; If both are pressed start cmd-k1-k2 or cmd-k2-k1 following the
    ;;   release order
    (define (define-chord-keys key1 key2 cmd-k1 cmd-k2 cmd-k1-k2 cmd-k2-k1)
        "Define chording keys"
      (let ((k1 #f) (k2 #f))
        (xbindkey-function key1 (lambda () (set! k1 #t)))
        (xbindkey-function key2 (lambda () (set! k2 #t)))
        (xbindkey-function (cons 'release key1)
                           (lambda ()
                             (if (and k1 k2)
                                 (run-command cmd-k1-k2)
                                 (if k1 (run-command cmd-k1)))
                             (set! k1 #f) (set! k2 #f)))
        (xbindkey-function (cons 'release key2)
                           (lambda ()
                             (if (and k1 k2)
                                 (run-command cmd-k2-k1)
                                 (if k2 (run-command cmd-k2)))
                             (set! k1 #f) (set! k2 #f)))))


    ;; Example:
    ;;   Shift + b:1                   start an xterm
    ;;   Shift + b:3                   start an rxvt
    ;;   Shift + b:1 then Shift + b:3  start gv
    ;;   Shift + b:3 then Shift + b:1  start xpdf

    (define-chord-keys '(shift "b:1") '(shift "b:3")
      "xterm" "rxvt" "gv" "xpdf")

    ;; Here the release order have no importance
    (the same program is started in both case)
    (define-chord-keys '(alt "b:1") '(alt "b:3")
      "gv" "xpdf" "xterm" "xterm")
    #+end_src

* my bindings

  #+begin_src scheme :tangle ~/.xbindkeysrc.scm
  (xbindkey
   '(shift mod1 x)
   "LC_CTYPE=zh_CN.UTF-8 emacsclient  -c -e \"(open-eshell-for-frame :off)\"")

  (xbindkey
   '(shift mod1 "c:36")
   "termite")

  ;; (xbindkey
  ;;  '(F1)
  ;;  "rofi -font \"Hack 16\" -show window rofi")

  ;; (xbindkey
  ;;  '(F2)
  ;;  "rofi -font \"Hack 16\" -show run")

  (xbindkey
   '(control mod1 "c:36")
   "rofi -font \"Hack 16\" -show run")

  (xbindkey
   '(control mod1 space)
   "rofi -font \"Hack 16\" -show window rofi")

  (xbindkey
   '(control F10)
   "scrot")

  (xbindkey
   '(control F9)
   "i3lock")
  #+end_src
